/*** parallax.js ***/
$(document).ready(function () {
  "use strict";
  var o = $(".parallax");
  ($.onResize = function () {
    "pc" === dispositivo && $.onScroll();
  }),
    ($.onScroll = function () {
      var e,
        n,
        i = $(window).scrollTop();
      $(window).height();
      for (n = 0; n < o.length; n++)
        (e = $(o[n])).css(
          "background-position",
          "0 " + parseFloat(-0.6 * (i - e.offset().top)) + "px"
        );
    }),
    ($.scrollToSection = function (o) {
      var e = $("#" + o);
      $(window).scrollTo(
        e.offset().top + (e.outerHeight() / 2 - $(window).height() / 2),
        700,
        { axis: "y", easing: "easeInOutQuad" }
      );
    }),
    $(window).resize($.onResize),
    "pc" === dispositivo && ($(window).scroll($.onScroll), $.onResize()),
    o.each(function (o) {
      $(this).css(
        "background-image",
        "url(img/varios/parallax_" + (o + 1) + ".jpg)"
      );
    });
});
(function ($) {
  var h = ($.scrollTo = function (a, b, c) {
    $(window).scrollTo(a, b, c);
  });
  h.defaults = {
    axis: "xy",
    duration: parseFloat($.fn.jquery) >= 1.3 ? 0 : 1,
    limit: true,
  };
  h.window = function (a) {
    return $(window)._scrollable();
  };
  $.fn._scrollable = function () {
    return this.map(function () {
      var a = this,
        isWin =
          !a.nodeName ||
          $.inArray(a.nodeName.toLowerCase(), [
            "iframe",
            "#document",
            "html",
            "body",
          ]) != -1;
      if (!isWin) return a;
      var b = (a.contentWindow || a).document || a.ownerDocument || a;
      return /webkit/i.test(navigator.userAgent) || b.compatMode == "BackCompat"
        ? b.body
        : b.documentElement;
    });
  };
  $.fn.scrollTo = function (e, f, g) {
    if (typeof f == "object") {
      g = f;
      f = 0;
    }
    if (typeof g == "function") g = { onAfter: g };
    if (e == "max") e = 9e9;
    g = $.extend({}, h.defaults, g);
    f = f || g.duration;
    g.queue = g.queue && g.axis.length > 1;
    if (g.queue) f /= 2;
    g.offset = both(g.offset);
    g.over = both(g.over);
    return this._scrollable()
      .each(function () {
        if (e == null) return;
        var d = this,
          $elem = $(d),
          targ = e,
          toff,
          attr = {},
          win = $elem.is("html,body");
        switch (typeof targ) {
          case "number":
          case "string":
            if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
              targ = both(targ);
              break;
            }
            targ = $(targ, this);
            if (!targ.length) return;
          case "object":
            if (targ.is || targ.style) toff = (targ = $(targ)).offset();
        }
        $.each(g.axis.split(""), function (i, a) {
          var b = a == "x" ? "Left" : "Top",
            pos = b.toLowerCase(),
            key = "scroll" + b,
            old = d[key],
            max = h.max(d, a);
          if (toff) {
            attr[key] = toff[pos] + (win ? 0 : old - $elem.offset()[pos]);
            if (g.margin) {
              attr[key] -= parseInt(targ.css("margin" + b)) || 0;
              attr[key] -= parseInt(targ.css("border" + b + "Width")) || 0;
            }
            attr[key] += g.offset[pos] || 0;
            if (g.over[pos])
              attr[key] += targ[a == "x" ? "width" : "height"]() * g.over[pos];
          } else {
            var c = targ[pos];
            attr[key] =
              c.slice && c.slice(-1) == "%" ? (parseFloat(c) / 100) * max : c;
          }
          if (g.limit && /^\d+$/.test(attr[key]))
            attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max);
          if (!i && g.queue) {
            if (old != attr[key]) animate(g.onAfterFirst);
            delete attr[key];
          }
        });
        animate(g.onAfter);
        function animate(a) {
          $elem.animate(
            attr,
            f,
            g.easing,
            a &&
              function () {
                a.call(this, e, g);
              }
          );
        }
      })
      .end();
  };
  h.max = function (a, b) {
    var c = b == "x" ? "Width" : "Height",
      scroll = "scroll" + c;
    if (!$(a).is("html,body")) return a[scroll] - $(a)[c.toLowerCase()]();
    var d = "client" + c,
      html = a.ownerDocument.documentElement,
      body = a.ownerDocument.body;
    return Math.max(html[scroll], body[scroll]) - Math.min(html[d], body[d]);
  };
  function both(a) {
    return typeof a == "object" ? a : { top: a, left: a };
  }
})(jQuery);

/*** slick.min.js ***/
$(document).ready(function () {
  $(".slick .cms_featuregallery_empty").remove();
});

!(function (a) {
  "use strict";
  "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery);
})(function (a) {
  "use strict";
  var b = window.Slick || {};
  (b = (function () {
    function c(c, d) {
      var f,
        g,
        e = this;
      if (
        ((e.defaults = {
          accessibility: !0,
          appendArrows: a(c),
          arrows: !0,
          asNavFor: null,
          prevArrow:
            '<button type="button" data-role="none" class="slick-prev">Previous</button>',
          nextArrow:
            '<button type="button" data-role="none" class="slick-next">Next</button>',
          autoplay: !1,
          autoplaySpeed: 3e3,
          centerMode: !1,
          centerPadding: "50px",
          cssEase: "ease",
          customPaging: function (a, b) {
            return (
              '<button type="button" data-role="none">' + (b + 1) + "</button>"
            );
          },
          dots: !1,
          dotsClass: "slick-dots",
          draggable: !0,
          easing: "linear",
          fade: !1,
          focusOnSelect: !1,
          infinite: !0,
          lazyLoad: "ondemand",
          onBeforeChange: null,
          onAfterChange: null,
          onInit: null,
          onReInit: null,
          pauseOnHover: !0,
          pauseOnDotsHover: !1,
          responsive: null,
          rtl: !1,
          slide: "div",
          slidesToShow: 1,
          slidesToScroll: 1,
          speed: 300,
          swipe: !0,
          touchMove: !0,
          touchThreshold: 5,
          useCSS: !0,
          vertical: !1,
        }),
        (e.initials = {
          animating: !1,
          dragging: !1,
          autoPlayTimer: null,
          currentSlide: 0,
          currentLeft: null,
          direction: 1,
          $dots: null,
          listWidth: null,
          listHeight: null,
          loadIndex: 0,
          $nextArrow: null,
          $prevArrow: null,
          slideCount: null,
          slideWidth: null,
          $slideTrack: null,
          $slides: null,
          sliding: !1,
          slideOffset: 0,
          swipeLeft: null,
          $list: null,
          touchObject: {},
          transformsEnabled: !1,
        }),
        a.extend(e, e.initials),
        (e.activeBreakpoint = null),
        (e.animType = null),
        (e.animProp = null),
        (e.breakpoints = []),
        (e.breakpointSettings = []),
        (e.cssTransitions = !1),
        (e.paused = !1),
        (e.positionProp = null),
        (e.$slider = a(c)),
        (e.$slidesCache = null),
        (e.transformType = null),
        (e.transitionType = null),
        (e.windowWidth = 0),
        (e.windowTimer = null),
        (e.options = a.extend({}, e.defaults, d)),
        (e.originalSettings = e.options),
        (f = e.options.responsive || null),
        f && f.length > -1)
      ) {
        for (g in f)
          f.hasOwnProperty(g) &&
            (e.breakpoints.push(f[g].breakpoint),
            (e.breakpointSettings[f[g].breakpoint] = f[g].settings));
        e.breakpoints.sort(function (a, b) {
          return b - a;
        });
      }
      (e.autoPlay = a.proxy(e.autoPlay, e)),
        (e.autoPlayClear = a.proxy(e.autoPlayClear, e)),
        (e.changeSlide = a.proxy(e.changeSlide, e)),
        (e.selectHandler = a.proxy(e.selectHandler, e)),
        (e.setPosition = a.proxy(e.setPosition, e)),
        (e.swipeHandler = a.proxy(e.swipeHandler, e)),
        (e.dragHandler = a.proxy(e.dragHandler, e)),
        (e.keyHandler = a.proxy(e.keyHandler, e)),
        (e.autoPlayIterator = a.proxy(e.autoPlayIterator, e)),
        (e.instanceUid = b++),
        (e.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/),
        e.init();
    }
    var b = 0;
    return c;
  })()),
    (b.prototype.addSlide = function (b, c, d) {
      var e = this;
      if ("boolean" == typeof c) (d = c), (c = null);
      else if (0 > c || c >= e.slideCount) return !1;
      e.unload(),
        "number" == typeof c
          ? 0 === c && 0 === e.$slides.length
            ? a(b).appendTo(e.$slideTrack)
            : d
            ? a(b).insertBefore(e.$slides.eq(c))
            : a(b).insertAfter(e.$slides.eq(c))
          : d === !0
          ? a(b).prependTo(e.$slideTrack)
          : a(b).appendTo(e.$slideTrack),
        (e.$slides = e.$slideTrack.children(this.options.slide)),
        e.$slideTrack.children(this.options.slide).detach(),
        e.$slideTrack.append(e.$slides),
        e.$slides.each(function (b, c) {
          a(c).attr("index", b);
        }),
        (e.$slidesCache = e.$slides),
        e.reinit();
    }),
    (b.prototype.animateSlide = function (b, c) {
      var d = {},
        e = this;
      e.options.rtl === !0 && e.options.vertical === !1 && (b = -b),
        e.transformsEnabled === !1
          ? e.options.vertical === !1
            ? e.$slideTrack.animate(
                { left: b },
                e.options.speed,
                e.options.easing,
                c
              )
            : e.$slideTrack.animate(
                { top: b },
                e.options.speed,
                e.options.easing,
                c
              )
          : e.cssTransitions === !1
          ? a({ animStart: e.currentLeft }).animate(
              { animStart: b },
              {
                duration: e.options.speed,
                easing: e.options.easing,
                step: function (a) {
                  e.options.vertical === !1
                    ? ((d[e.animType] = "translate(" + a + "px, 0px)"),
                      e.$slideTrack.css(d))
                    : ((d[e.animType] = "translate(0px," + a + "px)"),
                      e.$slideTrack.css(d));
                },
                complete: function () {
                  c && c.call();
                },
              }
            )
          : (e.applyTransition(),
            (d[e.animType] =
              e.options.vertical === !1
                ? "translate3d(" + b + "px, 0px, 0px)"
                : "translate3d(0px," + b + "px, 0px)"),
            e.$slideTrack.css(d),
            c &&
              setTimeout(function () {
                e.disableTransition(), c.call();
              }, e.options.speed));
    }),
    (b.prototype.applyTransition = function (a) {
      var b = this,
        c = {};
      (c[b.transitionType] =
        b.options.fade === !1
          ? b.transformType + " " + b.options.speed + "ms " + b.options.cssEase
          : "opacity " + b.options.speed + "ms " + b.options.cssEase),
        b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }),
    (b.prototype.autoPlay = function () {
      var a = this;
      a.autoPlayTimer && clearInterval(a.autoPlayTimer),
        a.slideCount > a.options.slidesToShow &&
          a.paused !== !0 &&
          (a.autoPlayTimer = setInterval(
            a.autoPlayIterator,
            a.options.autoplaySpeed
          ));
    }),
    (b.prototype.autoPlayClear = function () {
      var a = this;
      a.autoPlayTimer && clearInterval(a.autoPlayTimer);
    }),
    (b.prototype.autoPlayIterator = function () {
      var b = this,
        c =
          null != b.options.asNavFor ? a(b.options.asNavFor).getSlick() : null;
      b.options.infinite === !1
        ? 1 === b.direction
          ? (b.currentSlide + 1 === b.slideCount - 1 && (b.direction = 0),
            b.slideHandler(b.currentSlide + b.options.slidesToScroll),
            null != c &&
              c.slideHandler(c.currentSlide + c.options.slidesToScroll))
          : (0 === b.currentSlide - 1 && (b.direction = 1),
            b.slideHandler(b.currentSlide - b.options.slidesToScroll),
            null != c &&
              c.slideHandler(c.currentSlide - c.options.slidesToScroll))
        : (b.slideHandler(b.currentSlide + b.options.slidesToScroll),
          null != c &&
            c.slideHandler(c.currentSlide + c.options.slidesToScroll));
    }),
    (b.prototype.buildArrows = function () {
      var b = this;
      b.options.arrows === !0 &&
        b.slideCount > b.options.slidesToShow &&
        ((b.$prevArrow = a(b.options.prevArrow)),
        (b.$nextArrow = a(b.options.nextArrow)),
        b.htmlExpr.test(b.options.prevArrow) &&
          b.$prevArrow.appendTo(b.options.appendArrows),
        b.htmlExpr.test(b.options.nextArrow) &&
          b.$nextArrow.appendTo(b.options.appendArrows),
        b.options.infinite !== !0 && b.$prevArrow.addClass("slick-disabled"));
    }),
    (b.prototype.buildDots = function () {
      var c,
        d,
        b = this;
      if (b.options.dots === !0 && b.slideCount > b.options.slidesToShow) {
        for (
          d = '<ul class="' + b.options.dotsClass + '">', c = 0;
          c <= b.getDotCount();
          c += 1
        )
          d += "<li>" + b.options.customPaging.call(this, b, c) + "</li>";
        (d += "</ul>"),
          (b.$dots = a(d).appendTo(b.$slider)),
          b.$dots.find("li").first().addClass("slick-active");
      }
    }),
    (b.prototype.buildOut = function () {
      var b = this;
      (b.$slides = b.$slider
        .children(b.options.slide + ":not(.slick-cloned)")
        .addClass("slick-slide")),
        (b.slideCount = b.$slides.length),
        b.$slides.each(function (b, c) {
          a(c).attr("index", b);
        }),
        (b.$slidesCache = b.$slides),
        b.$slider.addClass("slick-slider"),
        (b.$slideTrack =
          0 === b.slideCount
            ? a('<div class="slick-track"/>').appendTo(b.$slider)
            : b.$slides.wrapAll('<div class="slick-track"/>').parent()),
        (b.$list = b.$slideTrack.wrap('<div class="slick-list"/>').parent()),
        b.$slideTrack.css("opacity", 0),
        b.options.centerMode === !0 &&
          ((b.options.slidesToScroll = 1),
          0 === b.options.slidesToShow % 2 && (b.options.slidesToShow = 3)),
        a("img[data-lazy]", b.$slider).not("[src]").addClass("slick-loading"),
        b.setupInfinite(),
        b.buildArrows(),
        b.buildDots(),
        b.updateDots(),
        b.options.accessibility === !0 && b.$list.prop("tabIndex", 0),
        b.setSlideClasses(
          "number" == typeof this.currentSlide ? this.currentSlide : 0
        ),
        b.options.draggable === !0 && b.$list.addClass("draggable");
    }),
    (b.prototype.checkResponsive = function () {
      var c,
        d,
        b = this;
      if (
        b.originalSettings.responsive &&
        b.originalSettings.responsive.length > -1 &&
        null !== b.originalSettings.responsive
      ) {
        d = null;
        for (c in b.breakpoints)
          b.breakpoints.hasOwnProperty(c) &&
            a(window).width() < b.breakpoints[c] &&
            (d = b.breakpoints[c]);
        null !== d
          ? null !== b.activeBreakpoint
            ? d !== b.activeBreakpoint &&
              ((b.activeBreakpoint = d),
              (b.options = a.extend({}, b.options, b.breakpointSettings[d])),
              b.refresh())
            : ((b.activeBreakpoint = d),
              (b.options = a.extend({}, b.options, b.breakpointSettings[d])),
              b.refresh())
          : null !== b.activeBreakpoint &&
            ((b.activeBreakpoint = null),
            (b.options = a.extend({}, b.options, b.originalSettings)),
            b.refresh());
      }
    }),
    (b.prototype.changeSlide = function (b) {
      var c = this,
        d = a(b.target),
        e =
          null != c.options.asNavFor ? a(c.options.asNavFor).getSlick() : null;
      switch ((d.is("a") && b.preventDefault(), b.data.message)) {
        case "previous":
          c.slideCount > c.options.slidesToShow &&
            (c.slideHandler(c.currentSlide - c.options.slidesToScroll),
            null != e &&
              e.slideHandler(e.currentSlide - e.options.slidesToScroll));
          break;
        case "next":
          c.slideCount > c.options.slidesToShow &&
            (c.slideHandler(c.currentSlide + c.options.slidesToScroll),
            null != e &&
              e.slideHandler(e.currentSlide + e.options.slidesToScroll));
          break;
        case "index":
          var f = a(b.target).parent().index() * c.options.slidesToScroll;
          c.slideHandler(f), null != e && e.slideHandler(f);
          break;
        default:
          return !1;
      }
    }),
    (b.prototype.destroy = function () {
      var b = this;
      b.autoPlayClear(),
        (b.touchObject = {}),
        a(".slick-cloned", b.$slider).remove(),
        b.$dots && b.$dots.remove(),
        b.$prevArrow && (b.$prevArrow.remove(), b.$nextArrow.remove()),
        b.$slides.parent().hasClass("slick-track") &&
          b.$slides.unwrap().unwrap(),
        b.$slides
          .removeClass("slick-slide slick-active slick-visible")
          .removeAttr("style"),
        b.$slider.removeClass("slick-slider"),
        b.$slider.removeClass("slick-initialized"),
        b.$list.off(".slick"),
        a(window).off(".slick-" + b.instanceUid),
        a(document).off(".slick-" + b.instanceUid);
    }),
    (b.prototype.disableTransition = function (a) {
      var b = this,
        c = {};
      (c[b.transitionType] = ""),
        b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }),
    (b.prototype.fadeSlide = function (a, b) {
      var c = this;
      c.cssTransitions === !1
        ? (c.$slides.eq(a).css({ zIndex: 1e3 }),
          c.$slides
            .eq(a)
            .animate({ opacity: 1 }, c.options.speed, c.options.easing, b))
        : (c.applyTransition(a),
          c.$slides.eq(a).css({ opacity: 1, zIndex: 1e3 }),
          b &&
            setTimeout(function () {
              c.disableTransition(a), b.call();
            }, c.options.speed));
    }),
    (b.prototype.filterSlides = function (a) {
      var b = this;
      null !== a &&
        (b.unload(),
        b.$slideTrack.children(this.options.slide).detach(),
        b.$slidesCache.filter(a).appendTo(b.$slideTrack),
        b.reinit());
    }),
    (b.prototype.getCurrent = function () {
      var a = this;
      return a.currentSlide;
    }),
    (b.prototype.getDotCount = function () {
      var e,
        a = this,
        b = 0,
        c = 0,
        d = 0;
      for (
        e =
          a.options.infinite === !0
            ? a.slideCount + a.options.slidesToShow - a.options.slidesToScroll
            : a.slideCount;
        e > b;

      )
        d++, (c += a.options.slidesToScroll), (b = c + a.options.slidesToShow);
      return d;
    }),
    (b.prototype.getLeft = function (a) {
      var c,
        d,
        b = this,
        e = 0;
      return (
        (b.slideOffset = 0),
        (d = b.$slides.first().outerHeight()),
        b.options.infinite === !0
          ? (b.slideCount > b.options.slidesToShow &&
              ((b.slideOffset = -1 * b.slideWidth * b.options.slidesToShow),
              (e = -1 * d * b.options.slidesToShow)),
            0 !== b.slideCount % b.options.slidesToScroll &&
              a + b.options.slidesToScroll > b.slideCount &&
              b.slideCount > b.options.slidesToShow &&
              ((b.slideOffset =
                ((-1 * b.slideCount) % b.options.slidesToShow) * b.slideWidth),
              (e = ((-1 * b.slideCount) % b.options.slidesToShow) * d)))
          : 0 !== b.slideCount % b.options.slidesToShow &&
            a + b.options.slidesToScroll > b.slideCount &&
            b.slideCount > b.options.slidesToShow &&
            ((b.slideOffset =
              b.options.slidesToShow * b.slideWidth -
              (b.slideCount % b.options.slidesToShow) * b.slideWidth),
            (e = (b.slideCount % b.options.slidesToShow) * d)),
        b.options.centerMode === !0 && b.options.infinite === !0
          ? (b.slideOffset +=
              b.slideWidth * Math.floor(b.options.slidesToShow / 2) -
              b.slideWidth)
          : b.options.centerMode === !0 &&
            (b.slideOffset +=
              b.slideWidth * Math.floor(b.options.slidesToShow / 2)),
        (c =
          b.options.vertical === !1
            ? -1 * a * b.slideWidth + b.slideOffset
            : -1 * a * d + e)
      );
    }),
    (b.prototype.init = function () {
      var b = this;
      a(b.$slider).hasClass("slick-initialized") ||
        (a(b.$slider).addClass("slick-initialized"),
        b.buildOut(),
        b.setProps(),
        b.startLoad(),
        b.loadSlider(),
        b.initializeEvents(),
        b.checkResponsive()),
        null !== b.options.onInit && b.options.onInit.call(this, b);
    }),
    (b.prototype.initArrowEvents = function () {
      var a = this;
      a.options.arrows === !0 &&
        a.slideCount > a.options.slidesToShow &&
        (a.$prevArrow.on("click.slick", { message: "previous" }, a.changeSlide),
        a.$nextArrow.on("click.slick", { message: "next" }, a.changeSlide));
    }),
    (b.prototype.initDotEvents = function () {
      var b = this;
      b.options.dots === !0 &&
        b.slideCount > b.options.slidesToShow &&
        a("li", b.$dots).on("click.slick", { message: "index" }, b.changeSlide),
        b.options.dots === !0 &&
          b.options.pauseOnDotsHover === !0 &&
          b.options.autoplay === !0 &&
          a("li", b.$dots)
            .on("mouseenter.slick", b.autoPlayClear)
            .on("mouseleave.slick", b.autoPlay);
    }),
    (b.prototype.initializeEvents = function () {
      var b = this;
      b.initArrowEvents(),
        b.initDotEvents(),
        b.$list.on(
          "touchstart.slick mousedown.slick",
          { action: "start" },
          b.swipeHandler
        ),
        b.$list.on(
          "touchmove.slick mousemove.slick",
          { action: "move" },
          b.swipeHandler
        ),
        b.$list.on(
          "touchend.slick mouseup.slick",
          { action: "end" },
          b.swipeHandler
        ),
        b.$list.on(
          "touchcancel.slick mouseleave.slick",
          { action: "end" },
          b.swipeHandler
        ),
        b.options.pauseOnHover === !0 &&
          b.options.autoplay === !0 &&
          (b.$list.on("mouseenter.slick", b.autoPlayClear),
          b.$list.on("mouseleave.slick", b.autoPlay)),
        b.options.accessibility === !0 &&
          b.$list.on("keydown.slick", b.keyHandler),
        b.options.focusOnSelect === !0 &&
          a(b.options.slide, b.$slideTrack).on("click.slick", b.selectHandler),
        a(window).on(
          "orientationchange.slick.slick-" + b.instanceUid,
          function () {
            b.checkResponsive(), b.setPosition();
          }
        ),
        a(window).on("resize.slick.slick-" + b.instanceUid, function () {
          a(window).width() !== b.windowWidth &&
            (clearTimeout(b.windowDelay),
            (b.windowDelay = window.setTimeout(function () {
              (b.windowWidth = a(window).width()),
                b.checkResponsive(),
                b.setPosition();
            }, 50)));
        }),
        a(window).on("load.slick.slick-" + b.instanceUid, b.setPosition),
        a(document).on("ready.slick.slick-" + b.instanceUid, b.setPosition);
    }),
    (b.prototype.initUI = function () {
      var a = this;
      a.options.arrows === !0 &&
        a.slideCount > a.options.slidesToShow &&
        (a.$prevArrow.show(), a.$nextArrow.show()),
        a.options.dots === !0 &&
          a.slideCount > a.options.slidesToShow &&
          a.$dots.show(),
        a.options.autoplay === !0 && a.autoPlay();
    }),
    (b.prototype.keyHandler = function (a) {
      var b = this;
      37 === a.keyCode
        ? b.changeSlide({ data: { message: "previous" } })
        : 39 === a.keyCode && b.changeSlide({ data: { message: "next" } });
    }),
    (b.prototype.lazyLoad = function () {
      function g(b) {
        a("img[data-lazy]", b).each(function () {
          var b = a(this),
            c = a(this).attr("data-lazy") + "?" + new Date().getTime();
          b.load(function () {
            b.animate({ opacity: 1 }, 200);
          })
            .css({ opacity: 0 })
            .attr("src", c)
            .removeAttr("data-lazy")
            .removeClass("slick-loading");
        });
      }
      var c,
        d,
        e,
        f,
        b = this;
      b.options.centerMode === !0 || b.options.fade === !0
        ? ((e = b.options.slidesToShow + b.currentSlide - 1),
          (f = e + b.options.slidesToShow + 2))
        : ((e = b.options.infinite
            ? b.options.slidesToShow + b.currentSlide
            : b.currentSlide),
          (f = e + b.options.slidesToShow)),
        (c = b.$slider.find(".slick-slide").slice(e, f)),
        g(c),
        1 == b.slideCount
          ? ((d = b.$slider.find(".slick-slide")), g(d))
          : b.currentSlide >= b.slideCount - b.options.slidesToShow
          ? ((d = b.$slider
              .find(".slick-cloned")
              .slice(0, b.options.slidesToShow)),
            g(d))
          : 0 === b.currentSlide &&
            ((d = b.$slider
              .find(".slick-cloned")
              .slice(-1 * b.options.slidesToShow)),
            g(d));
    }),
    (b.prototype.loadSlider = function () {
      var a = this;
      a.setPosition(),
        a.$slideTrack.css({ opacity: 1 }),
        a.$slider.removeClass("slick-loading"),
        a.initUI(),
        "progressive" === a.options.lazyLoad && a.progressiveLazyLoad();
    }),
    (b.prototype.postSlide = function (a) {
      var b = this;
      null !== b.options.onAfterChange &&
        b.options.onAfterChange.call(this, b, a),
        (b.animating = !1),
        b.setPosition(),
        (b.swipeLeft = null),
        b.options.autoplay === !0 && b.paused === !1 && b.autoPlay();
    }),
    (b.prototype.progressiveLazyLoad = function () {
      var c,
        d,
        b = this;
      (c = a("img[data-lazy]").length),
        c > 0 &&
          ((d = a("img[data-lazy]", b.$slider).first()),
          d
            .attr("src", d.attr("data-lazy"))
            .removeClass("slick-loading")
            .load(function () {
              d.removeAttr("data-lazy"), b.progressiveLazyLoad();
            }));
    }),
    (b.prototype.refresh = function () {
      var b = this,
        c = b.currentSlide;
      b.destroy(), a.extend(b, b.initials), (b.currentSlide = c), b.init();
    }),
    (b.prototype.reinit = function () {
      var b = this;
      (b.$slides = b.$slideTrack
        .children(b.options.slide)
        .addClass("slick-slide")),
        (b.slideCount = b.$slides.length),
        b.currentSlide >= b.slideCount &&
          0 !== b.currentSlide &&
          (b.currentSlide = b.currentSlide - b.options.slidesToScroll),
        b.setProps(),
        b.setupInfinite(),
        b.buildArrows(),
        b.updateArrows(),
        b.initArrowEvents(),
        b.buildDots(),
        b.updateDots(),
        b.initDotEvents(),
        b.options.focusOnSelect === !0 &&
          a(b.options.slide, b.$slideTrack).on("click.slick", b.selectHandler),
        b.setSlideClasses(0),
        b.setPosition(),
        null !== b.options.onReInit && b.options.onReInit.call(this, b);
    }),
    (b.prototype.removeSlide = function (a, b) {
      var c = this;
      return (
        "boolean" == typeof a
          ? ((b = a), (a = b === !0 ? 0 : c.slideCount - 1))
          : (a = b === !0 ? --a : a),
        c.slideCount < 1 || 0 > a || a > c.slideCount - 1
          ? !1
          : (c.unload(),
            c.$slideTrack.children(this.options.slide).eq(a).remove(),
            (c.$slides = c.$slideTrack.children(this.options.slide)),
            c.$slideTrack.children(this.options.slide).detach(),
            c.$slideTrack.append(c.$slides),
            (c.$slidesCache = c.$slides),
            c.reinit(),
            void 0)
      );
    }),
    (b.prototype.setCSS = function (a) {
      var d,
        e,
        b = this,
        c = {};
      b.options.rtl === !0 && (a = -a),
        (d = "left" == b.positionProp ? a + "px" : "0px"),
        (e = "top" == b.positionProp ? a + "px" : "0px"),
        (c[b.positionProp] = a),
        b.transformsEnabled === !1
          ? b.$slideTrack.css(c)
          : ((c = {}),
            b.cssTransitions === !1
              ? ((c[b.animType] = "translate(" + d + ", " + e + ")"),
                b.$slideTrack.css(c))
              : ((c[b.animType] = "translate3d(" + d + ", " + e + ", 0px)"),
                b.$slideTrack.css(c)));
    }),
    (b.prototype.setDimensions = function () {
      var a = this;
      a.options.vertical === !1
        ? a.options.centerMode === !0 &&
          a.$list.css({ padding: "0px " + a.options.centerPadding })
        : (a.$list.height(
            a.$slides.first().outerHeight(!0) * a.options.slidesToShow
          ),
          a.options.centerMode === !0 &&
            a.$list.css({ padding: a.options.centerPadding + " 0px" })),
        (a.listWidth = a.$list.width()),
        (a.listHeight = a.$list.height()),
        a.options.vertical === !1
          ? ((a.slideWidth = Math.ceil(a.listWidth / a.options.slidesToShow)),
            a.$slideTrack.width(
              Math.ceil(
                a.slideWidth * a.$slideTrack.children(".slick-slide").length
              )
            ))
          : ((a.slideWidth = Math.ceil(a.listWidth)),
            a.$slideTrack.height(
              Math.ceil(
                a.$slides.first().outerHeight(!0) *
                  a.$slideTrack.children(".slick-slide").length
              )
            ));
      var b = a.$slides.first().outerWidth(!0) - a.$slides.first().width();
      a.$slideTrack.children(".slick-slide").width(a.slideWidth - b);
    }),
    (b.prototype.setFade = function () {
      var c,
        b = this;
      b.$slides.each(function (d, e) {
        (c = -1 * b.slideWidth * d),
          a(e).css({
            position: "relative",
            left: c,
            top: 0,
            zIndex: 800,
            opacity: 0,
          });
      }),
        b.$slides.eq(b.currentSlide).css({ zIndex: 900, opacity: 1 });
    }),
    (b.prototype.setPosition = function () {
      var a = this;
      a.setDimensions(),
        a.options.fade === !1
          ? a.setCSS(a.getLeft(a.currentSlide))
          : a.setFade();
    }),
    (b.prototype.setProps = function () {
      var a = this;
      (a.positionProp = a.options.vertical === !0 ? "top" : "left"),
        "top" === a.positionProp
          ? a.$slider.addClass("slick-vertical")
          : a.$slider.removeClass("slick-vertical"),
        (void 0 !== document.body.style.WebkitTransition ||
          void 0 !== document.body.style.MozTransition ||
          void 0 !== document.body.style.msTransition) &&
          a.options.useCSS === !0 &&
          (a.cssTransitions = !0),
        void 0 !== document.body.style.MozTransform &&
          ((a.animType = "MozTransform"),
          (a.transformType = "-moz-transform"),
          (a.transitionType = "MozTransition")),
        void 0 !== document.body.style.webkitTransform &&
          ((a.animType = "webkitTransform"),
          (a.transformType = "-webkit-transform"),
          (a.transitionType = "webkitTransition")),
        void 0 !== document.body.style.msTransform &&
          ((a.animType = "msTransform"),
          (a.transformType = "-ms-transform"),
          (a.transitionType = "msTransition")),
        void 0 !== document.body.style.transform &&
          ((a.animType = "transform"),
          (a.transformType = "transform"),
          (a.transitionType = "transition")),
        (a.transformsEnabled = null !== a.animType);
    }),
    (b.prototype.setSlideClasses = function (a) {
      var c,
        d,
        e,
        f,
        b = this;
      b.$slider
        .find(".slick-slide")
        .removeClass("slick-active")
        .removeClass("slick-center"),
        (d = b.$slider.find(".slick-slide")),
        b.options.centerMode === !0
          ? ((c = Math.floor(b.options.slidesToShow / 2)),
            b.options.infinite === !0 &&
              (a >= c && a <= b.slideCount - 1 - c
                ? b.$slides.slice(a - c, a + c + 1).addClass("slick-active")
                : ((e = b.options.slidesToShow + a),
                  d.slice(e - c + 1, e + c + 2).addClass("slick-active")),
              0 === a
                ? d
                    .eq(d.length - 1 - b.options.slidesToShow)
                    .addClass("slick-center")
                : a === b.slideCount - 1 &&
                  d.eq(b.options.slidesToShow).addClass("slick-center")),
            b.$slides.eq(a).addClass("slick-center"))
          : a >= 0 && a <= b.slideCount - b.options.slidesToShow
          ? b.$slides
              .slice(a, a + b.options.slidesToShow)
              .addClass("slick-active")
          : d.length <= b.options.slidesToShow
          ? d.addClass("slick-active")
          : ((f = b.slideCount % b.options.slidesToShow),
            (e = b.options.infinite === !0 ? b.options.slidesToShow + a : a),
            b.options.slidesToShow == b.options.slidesToScroll &&
            b.slideCount - a < b.options.slidesToShow
              ? d
                  .slice(e - (b.options.slidesToShow - f), e + f)
                  .addClass("slick-active")
              : d
                  .slice(e, e + b.options.slidesToShow)
                  .addClass("slick-active")),
        "ondemand" === b.options.lazyLoad && b.lazyLoad();
    }),
    (b.prototype.setupInfinite = function () {
      var c,
        d,
        e,
        b = this;
      if (
        ((b.options.fade === !0 || b.options.vertical === !0) &&
          (b.options.centerMode = !1),
        b.options.infinite === !0 &&
          b.options.fade === !1 &&
          ((d = null), b.slideCount > b.options.slidesToShow))
      ) {
        for (
          e =
            b.options.centerMode === !0
              ? b.options.slidesToShow + 1
              : b.options.slidesToShow,
            c = b.slideCount;
          c > b.slideCount - e;
          c -= 1
        )
          (d = c - 1),
            a(b.$slides[d])
              .clone(!0)
              .attr("id", "")
              .prependTo(b.$slideTrack)
              .addClass("slick-cloned");
        for (c = 0; e > c; c += 1)
          (d = c),
            a(b.$slides[d])
              .clone(!0)
              .attr("id", "")
              .appendTo(b.$slideTrack)
              .addClass("slick-cloned");
        b.$slideTrack
          .find(".slick-cloned")
          .find("[id]")
          .each(function () {
            a(this).attr("id", "");
          });
      }
    }),
    (b.prototype.selectHandler = function (b) {
      var c = this,
        d =
          null != c.options.asNavFor ? a(c.options.asNavFor).getSlick() : null,
        e = parseInt(a(b.target).parent().attr("index"));
      if (
        (e || (e = 0),
        !(c.slideCount <= c.options.slidesToShow) &&
          (c.slideHandler(e), null != d))
      ) {
        if (d.slideCount <= d.options.slidesToShow) return;
        d.slideHandler(e);
      }
    }),
    (b.prototype.slideHandler = function (a) {
      var b,
        c,
        d,
        e,
        f = null,
        g = this;
      return g.animating === !0
        ? !1
        : ((b = a),
          (f = g.getLeft(b)),
          (d = g.getLeft(g.currentSlide)),
          (e =
            0 !== g.slideCount % g.options.slidesToScroll
              ? g.options.slidesToScroll
              : 0),
          (g.currentLeft = null === g.swipeLeft ? d : g.swipeLeft),
          g.options.infinite === !1 &&
          g.options.centerMode === !1 &&
          (0 > a || a > g.slideCount - g.options.slidesToShow + e)
            ? (g.options.fade === !1 &&
                ((b = g.currentSlide),
                g.animateSlide(d, function () {
                  g.postSlide(b);
                })),
              !1)
            : g.options.infinite === !1 &&
              g.options.centerMode === !0 &&
              (0 > a || a > g.slideCount - g.options.slidesToScroll)
            ? (g.options.fade === !1 &&
                ((b = g.currentSlide),
                g.animateSlide(d, function () {
                  g.postSlide(b);
                })),
              !1)
            : (g.options.autoplay === !0 && clearInterval(g.autoPlayTimer),
              (c =
                0 > b
                  ? 0 !== g.slideCount % g.options.slidesToScroll
                    ? g.slideCount - (g.slideCount % g.options.slidesToScroll)
                    : g.slideCount - g.options.slidesToScroll
                  : b > g.slideCount - 1
                  ? 0
                  : b),
              (g.animating = !0),
              null !== g.options.onBeforeChange &&
                a !== g.currentSlide &&
                g.options.onBeforeChange.call(this, g, g.currentSlide, c),
              (g.currentSlide = c),
              g.setSlideClasses(g.currentSlide),
              g.updateDots(),
              g.updateArrows(),
              g.options.fade === !0
                ? (g.fadeSlide(c, function () {
                    g.postSlide(c);
                  }),
                  !1)
                : (g.animateSlide(f, function () {
                    g.postSlide(c);
                  }),
                  void 0)));
    }),
    (b.prototype.startLoad = function () {
      var a = this;
      a.options.arrows === !0 &&
        a.slideCount > a.options.slidesToShow &&
        (a.$prevArrow.hide(), a.$nextArrow.hide()),
        a.options.dots === !0 &&
          a.slideCount > a.options.slidesToShow &&
          a.$dots.hide(),
        a.$slider.addClass("slick-loading");
    }),
    (b.prototype.swipeDirection = function () {
      var a,
        b,
        c,
        d,
        e = this;
      return (
        (a = e.touchObject.startX - e.touchObject.curX),
        (b = e.touchObject.startY - e.touchObject.curY),
        (c = Math.atan2(b, a)),
        (d = Math.round((180 * c) / Math.PI)),
        0 > d && (d = 360 - Math.abs(d)),
        45 >= d && d >= 0
          ? "left"
          : 360 >= d && d >= 315
          ? "left"
          : d >= 135 && 225 >= d
          ? "right"
          : "vertical"
      );
    }),
    (b.prototype.swipeEnd = function (b) {
      var c = this,
        d =
          null != c.options.asNavFor ? a(c.options.asNavFor).getSlick() : null;
      if (((c.dragging = !1), void 0 === c.touchObject.curX)) return !1;
      if (c.touchObject.swipeLength >= c.touchObject.minSwipe)
        switch (
          (a(b.target).on("click.slick", function (b) {
            b.stopImmediatePropagation(),
              b.stopPropagation(),
              b.preventDefault(),
              a(b.target).off("click.slick");
          }),
          c.swipeDirection())
        ) {
          case "left":
            c.slideHandler(c.currentSlide + c.options.slidesToScroll),
              null != d &&
                d.slideHandler(d.currentSlide + d.options.slidesToScroll),
              (c.touchObject = {});
            break;
          case "right":
            c.slideHandler(c.currentSlide - c.options.slidesToScroll),
              null != d &&
                d.slideHandler(d.currentSlide - d.options.slidesToScroll),
              (c.touchObject = {});
        }
      else
        c.touchObject.startX !== c.touchObject.curX &&
          (c.slideHandler(c.currentSlide),
          null != d && d.slideHandler(d.currentSlide),
          (c.touchObject = {}));
    }),
    (b.prototype.swipeHandler = function (a) {
      var b = this;
      if (
        !(
          b.options.swipe === !1 ||
          ("ontouchend" in document && b.options.swipe === !1) ||
          b.options.draggable === !1 ||
          (b.options.draggable === !1 && !a.originalEvent.touches)
        )
      )
        switch (
          ((b.touchObject.fingerCount =
            a.originalEvent && void 0 !== a.originalEvent.touches
              ? a.originalEvent.touches.length
              : 1),
          (b.touchObject.minSwipe = b.listWidth / b.options.touchThreshold),
          a.data.action)
        ) {
          case "start":
            b.swipeStart(a);
            break;
          case "move":
            b.swipeMove(a);
            break;
          case "end":
            b.swipeEnd(a);
        }
    }),
    (b.prototype.swipeMove = function (a) {
      var c,
        d,
        e,
        f,
        b = this;
      return (
        (f = void 0 !== a.originalEvent ? a.originalEvent.touches : null),
        (c = b.getLeft(b.currentSlide)),
        !b.dragging || (f && 1 !== f.length)
          ? !1
          : ((b.touchObject.curX = void 0 !== f ? f[0].pageX : a.clientX),
            (b.touchObject.curY = void 0 !== f ? f[0].pageY : a.clientY),
            (b.touchObject.swipeLength = Math.round(
              Math.sqrt(Math.pow(b.touchObject.curX - b.touchObject.startX, 2))
            )),
            (d = b.swipeDirection()),
            "vertical" !== d
              ? (void 0 !== a.originalEvent &&
                  b.touchObject.swipeLength > 4 &&
                  a.preventDefault(),
                (e = b.touchObject.curX > b.touchObject.startX ? 1 : -1),
                (b.swipeLeft =
                  b.options.vertical === !1
                    ? c + b.touchObject.swipeLength * e
                    : c +
                      b.touchObject.swipeLength *
                        (b.$list.height() / b.listWidth) *
                        e),
                b.options.fade === !0 || b.options.touchMove === !1
                  ? !1
                  : b.animating === !0
                  ? ((b.swipeLeft = null), !1)
                  : (b.setCSS(b.swipeLeft), void 0))
              : void 0)
      );
    }),
    (b.prototype.swipeStart = function (a) {
      var c,
        b = this;
      return 1 !== b.touchObject.fingerCount ||
        b.slideCount <= b.options.slidesToShow
        ? ((b.touchObject = {}), !1)
        : (void 0 !== a.originalEvent &&
            void 0 !== a.originalEvent.touches &&
            (c = a.originalEvent.touches[0]),
          (b.touchObject.startX = b.touchObject.curX =
            void 0 !== c ? c.pageX : a.clientX),
          (b.touchObject.startY = b.touchObject.curY =
            void 0 !== c ? c.pageY : a.clientY),
          (b.dragging = !0),
          void 0);
    }),
    (b.prototype.unfilterSlides = function () {
      var a = this;
      null !== a.$slidesCache &&
        (a.unload(),
        a.$slideTrack.children(this.options.slide).detach(),
        a.$slidesCache.appendTo(a.$slideTrack),
        a.reinit());
    }),
    (b.prototype.unload = function () {
      var b = this;
      a(".slick-cloned", b.$slider).remove(),
        b.$dots && b.$dots.remove(),
        b.$prevArrow && (b.$prevArrow.remove(), b.$nextArrow.remove()),
        b.$slides
          .removeClass("slick-slide slick-active slick-visible")
          .removeAttr("style");
    }),
    (b.prototype.updateArrows = function () {
      var a = this;
      a.options.arrows === !0 &&
        a.options.infinite !== !0 &&
        a.slideCount > a.options.slidesToShow &&
        (a.$prevArrow.removeClass("slick-disabled"),
        a.$nextArrow.removeClass("slick-disabled"),
        0 === a.currentSlide
          ? (a.$prevArrow.addClass("slick-disabled"),
            a.$nextArrow.removeClass("slick-disabled"))
          : a.currentSlide >= a.slideCount - a.options.slidesToShow &&
            (a.$nextArrow.addClass("slick-disabled"),
            a.$prevArrow.removeClass("slick-disabled")));
    }),
    (b.prototype.updateDots = function () {
      var a = this;
      null !== a.$dots &&
        (a.$dots.find("li").removeClass("slick-active"),
        a.$dots
          .find("li")
          .eq(Math.floor(a.currentSlide / a.options.slidesToScroll))
          .addClass("slick-active"));
    }),
    (a.fn.slick = function (a) {
      var c = this;
      return c.each(function (c, d) {
        d.slick = new b(d, a);
      });
    }),
    (a.fn.slickAdd = function (a, b, c) {
      var d = this;
      return d.each(function (d, e) {
        e.slick.addSlide(a, b, c);
      });
    }),
    (a.fn.slickCurrentSlide = function () {
      var a = this;
      return a.get(0).slick.getCurrent();
    }),
    (a.fn.slickFilter = function (a) {
      var b = this;
      return b.each(function (b, c) {
        c.slick.filterSlides(a);
      });
    }),
    (a.fn.slickGoTo = function (b) {
      var c = this;
      return c.each(function (c, d) {
        var e =
          null != d.slick.options.asNavFor ? a(d.slick.options.asNavFor) : null;
        null != e && e.slickGoTo(b), d.slick.slideHandler(b);
      });
    }),
    (a.fn.slickNext = function () {
      var a = this;
      return a.each(function (a, b) {
        b.slick.changeSlide({ data: { message: "next" } });
      });
    }),
    (a.fn.slickPause = function () {
      var a = this;
      return a.each(function (a, b) {
        b.slick.autoPlayClear(), (b.slick.paused = !0);
      });
    }),
    (a.fn.slickPlay = function () {
      var a = this;
      return a.each(function (a, b) {
        (b.slick.paused = !1), b.slick.autoPlay();
      });
    }),
    (a.fn.slickPrev = function () {
      var a = this;
      return a.each(function (a, b) {
        b.slick.changeSlide({ data: { message: "previous" } });
      });
    }),
    (a.fn.slickRemove = function (a, b) {
      var c = this;
      return c.each(function (c, d) {
        d.slick.removeSlide(a, b);
      });
    }),
    (a.fn.slickGetOption = function (a) {
      var b = this;
      return b.get(0).slick.options[a];
    }),
    (a.fn.slickSetOption = function (a, b, c) {
      var d = this;
      return d.each(function (d, e) {
        (e.slick.options[a] = b),
          c === !0 && (e.slick.unload(), e.slick.reinit());
      });
    }),
    (a.fn.slickUnfilter = function () {
      var a = this;
      return a.each(function (a, b) {
        b.slick.unfilterSlides();
      });
    }),
    (a.fn.unslick = function () {
      var a = this;
      return a.each(function (a, b) {
        b.slick && b.slick.destroy();
      });
    }),
    (a.fn.getSlick = function () {
      var a = null,
        b = this;
      return (
        b.each(function (b, c) {
          a = c.slick;
        }),
        a
      );
    });
});

/*** site_scripts.js ***/
$(document).ready(function () {
  $("#hmenu, .mod_navigation")
    .find(".haschildren")
    .each(function (e, s) {
      var l = $(s);
      $(s)
        .find("li")
        .each(function (e, s) {
          $(s).hasClass("current") && l.addClass("current");
        });
    }),
    $(window).scroll(function () {
      $(this).scrollTop() > 100
        ? $(".scrollup").fadeIn()
        : $(".scrollup").fadeOut();
    }),
    $(".scrollup").click(function () {
      return $("html, body").animate({ scrollTop: 0 }, 600), !1;
    }),
    $(".c_home").slick({
      dots: !1,
      slide: "li",
      infinite: !0,
      speed: 600,
      slidesToShow: 4,
      slidesToScroll: 1,
      responsive: [
        { breakpoint: 970, settings: { slidesToShow: 1, slidesToScroll: 1 } },
      ],
    }),
    $(".noticias_m").slick({
      dots: !1,
      vertical: !0,
      slide: "li",
      infinite: !1,
      speed: 600,
      slidesToShow: 2,
      slidesToScroll: 1,
    });
  new Waypoint.Sticky({ element: $(".top")[0] });
  $("#map_canvas1").addClass("scrolloff"),
    $("#canvas1").on("click", function () {
      $("#map_canvas1").removeClass("scrolloff");
    }),
    $("#map_canvas1").mouseleave(function () {
      $("#map_canvas1").addClass("scrolloff");
    }),
    $(".picturegallerypicture").fancybox({
      beforeLoad: function () {
        this.title =
          "Imagen " +
          (this.index + 1) +
          " de " +
          this.group.length +
          (this.title ? " - " + this.title : "");
      },
      helpers: { title: { type: "outside" } },
    }),
    $(".news .mod_featuregallery_text").shorten(),
    $(".blog .mod_featuregallery_text").shortenb(),
    $(
      ".noticias_m .mod_featuregallery_text, .noticias_m1 .mod_featuregallery_text"
    ).shorten(),
    $(".navbar-toggle").click(function () {
      $(this).parent().find("#menu_phone").slideToggle();
    }),
    $("#map_canvas1").addClass("scrolloff"),
    $("#canvas1").on("click", function () {
      $("#map_canvas1").removeClass("scrolloff");
    }),
    $("#map_canvas1").mouseleave(function () {
      $("#map_canvas1").addClass("scrolloff");
    });
});

/*** jquery.waypoints.min.js ***/
!(function () {
  "use strict";
  function t(o) {
    if (!o) throw new Error("No options passed to Waypoint constructor");
    if (!o.element)
      throw new Error("No element option passed to Waypoint constructor");
    if (!o.handler)
      throw new Error("No handler option passed to Waypoint constructor");
    (this.key = "waypoint-" + e),
      (this.options = t.Adapter.extend({}, t.defaults, o)),
      (this.element = this.options.element),
      (this.adapter = new t.Adapter(this.element)),
      (this.callback = o.handler),
      (this.axis = this.options.horizontal ? "horizontal" : "vertical"),
      (this.enabled = this.options.enabled),
      (this.triggerPoint = null),
      (this.group = t.Group.findOrCreate({
        name: this.options.group,
        axis: this.axis,
      })),
      (this.context = t.Context.findOrCreateByElement(this.options.context)),
      t.offsetAliases[this.options.offset] &&
        (this.options.offset = t.offsetAliases[this.options.offset]),
      this.group.add(this),
      this.context.add(this),
      (i[this.key] = this),
      (e += 1);
  }
  var e = 0,
    i = {};
  (t.prototype.queueTrigger = function (t) {
    this.group.queueTrigger(this, t);
  }),
    (t.prototype.trigger = function (t) {
      this.enabled && this.callback && this.callback.apply(this, t);
    }),
    (t.prototype.destroy = function () {
      this.context.remove(this), this.group.remove(this), delete i[this.key];
    }),
    (t.prototype.disable = function () {
      return (this.enabled = !1), this;
    }),
    (t.prototype.enable = function () {
      return this.context.refresh(), (this.enabled = !0), this;
    }),
    (t.prototype.next = function () {
      return this.group.next(this);
    }),
    (t.prototype.previous = function () {
      return this.group.previous(this);
    }),
    (t.invokeAll = function (t) {
      var e = [];
      for (var o in i) e.push(i[o]);
      for (var n = 0, r = e.length; r > n; n++) e[n][t]();
    }),
    (t.destroyAll = function () {
      t.invokeAll("destroy");
    }),
    (t.disableAll = function () {
      t.invokeAll("disable");
    }),
    (t.enableAll = function () {
      t.invokeAll("enable");
    }),
    (t.refreshAll = function () {
      t.Context.refreshAll();
    }),
    (t.viewportHeight = function () {
      return window.innerHeight || document.documentElement.clientHeight;
    }),
    (t.viewportWidth = function () {
      return document.documentElement.clientWidth;
    }),
    (t.adapters = []),
    (t.defaults = {
      context: window,
      continuous: !0,
      enabled: !0,
      group: "default",
      horizontal: !1,
      offset: 0,
    }),
    (t.offsetAliases = {
      "bottom-in-view": function () {
        return this.context.innerHeight() - this.adapter.outerHeight();
      },
      "right-in-view": function () {
        return this.context.innerWidth() - this.adapter.outerWidth();
      },
    }),
    (window.Waypoint = t);
})(),
  (function () {
    "use strict";
    function t(t) {
      window.setTimeout(t, 1e3 / 60);
    }
    function e(t) {
      (this.element = t),
        (this.Adapter = n.Adapter),
        (this.adapter = new this.Adapter(t)),
        (this.key = "waypoint-context-" + i),
        (this.didScroll = !1),
        (this.didResize = !1),
        (this.oldScroll = {
          x: this.adapter.scrollLeft(),
          y: this.adapter.scrollTop(),
        }),
        (this.waypoints = { vertical: {}, horizontal: {} }),
        (t.waypointContextKey = this.key),
        (o[t.waypointContextKey] = this),
        (i += 1),
        this.createThrottledScrollHandler(),
        this.createThrottledResizeHandler();
    }
    var i = 0,
      o = {},
      n = window.Waypoint,
      r = window.onload;
    (e.prototype.add = function (t) {
      var e = t.options.horizontal ? "horizontal" : "vertical";
      (this.waypoints[e][t.key] = t), this.refresh();
    }),
      (e.prototype.checkEmpty = function () {
        var t = this.Adapter.isEmptyObject(this.waypoints.horizontal),
          e = this.Adapter.isEmptyObject(this.waypoints.vertical);
        t && e && (this.adapter.off(".waypoints"), delete o[this.key]);
      }),
      (e.prototype.createThrottledResizeHandler = function () {
        function t() {
          e.handleResize(), (e.didResize = !1);
        }
        var e = this;
        this.adapter.on("resize.waypoints", function () {
          e.didResize || ((e.didResize = !0), n.requestAnimationFrame(t));
        });
      }),
      (e.prototype.createThrottledScrollHandler = function () {
        function t() {
          e.handleScroll(), (e.didScroll = !1);
        }
        var e = this;
        this.adapter.on("scroll.waypoints", function () {
          (!e.didScroll || n.isTouch) &&
            ((e.didScroll = !0), n.requestAnimationFrame(t));
        });
      }),
      (e.prototype.handleResize = function () {
        n.Context.refreshAll();
      }),
      (e.prototype.handleScroll = function () {
        var t = {},
          e = {
            horizontal: {
              newScroll: this.adapter.scrollLeft(),
              oldScroll: this.oldScroll.x,
              forward: "right",
              backward: "left",
            },
            vertical: {
              newScroll: this.adapter.scrollTop(),
              oldScroll: this.oldScroll.y,
              forward: "down",
              backward: "up",
            },
          };
        for (var i in e) {
          var o = e[i],
            n = o.newScroll > o.oldScroll,
            r = n ? o.forward : o.backward;
          for (var s in this.waypoints[i]) {
            var a = this.waypoints[i][s],
              l = o.oldScroll < a.triggerPoint,
              h = o.newScroll >= a.triggerPoint,
              p = l && h,
              u = !l && !h;
            (p || u) && (a.queueTrigger(r), (t[a.group.id] = a.group));
          }
        }
        for (var c in t) t[c].flushTriggers();
        this.oldScroll = { x: e.horizontal.newScroll, y: e.vertical.newScroll };
      }),
      (e.prototype.innerHeight = function () {
        return this.element == this.element.window
          ? n.viewportHeight()
          : this.adapter.innerHeight();
      }),
      (e.prototype.remove = function (t) {
        delete this.waypoints[t.axis][t.key], this.checkEmpty();
      }),
      (e.prototype.innerWidth = function () {
        return this.element == this.element.window
          ? n.viewportWidth()
          : this.adapter.innerWidth();
      }),
      (e.prototype.destroy = function () {
        var t = [];
        for (var e in this.waypoints)
          for (var i in this.waypoints[e]) t.push(this.waypoints[e][i]);
        for (var o = 0, n = t.length; n > o; o++) t[o].destroy();
      }),
      (e.prototype.refresh = function () {
        var t,
          e = this.element == this.element.window,
          i = this.adapter.offset(),
          o = {};
        this.handleScroll(),
          (t = {
            horizontal: {
              contextOffset: e ? 0 : i.left,
              contextScroll: e ? 0 : this.oldScroll.x,
              contextDimension: this.innerWidth(),
              oldScroll: this.oldScroll.x,
              forward: "right",
              backward: "left",
              offsetProp: "left",
            },
            vertical: {
              contextOffset: e ? 0 : i.top,
              contextScroll: e ? 0 : this.oldScroll.y,
              contextDimension: this.innerHeight(),
              oldScroll: this.oldScroll.y,
              forward: "down",
              backward: "up",
              offsetProp: "top",
            },
          });
        for (var n in t) {
          var r = t[n];
          for (var s in this.waypoints[n]) {
            var a,
              l,
              h,
              p,
              u,
              c = this.waypoints[n][s],
              d = c.options.offset,
              f = c.triggerPoint,
              w = 0,
              y = null == f;
            c.element !== c.element.window &&
              (w = c.adapter.offset()[r.offsetProp]),
              "function" == typeof d
                ? (d = d.apply(c))
                : "string" == typeof d &&
                  ((d = parseFloat(d)),
                  c.options.offset.indexOf("%") > -1 &&
                    (d = Math.ceil((r.contextDimension * d) / 100))),
              (a = r.contextScroll - r.contextOffset),
              (c.triggerPoint = w + a - d),
              (l = f < r.oldScroll),
              (h = c.triggerPoint >= r.oldScroll),
              (p = l && h),
              (u = !l && !h),
              !y && p
                ? (c.queueTrigger(r.backward), (o[c.group.id] = c.group))
                : !y && u
                ? (c.queueTrigger(r.forward), (o[c.group.id] = c.group))
                : y &&
                  r.oldScroll >= c.triggerPoint &&
                  (c.queueTrigger(r.forward), (o[c.group.id] = c.group));
          }
        }
        for (var g in o) o[g].flushTriggers();
        return this;
      }),
      (e.findOrCreateByElement = function (t) {
        return e.findByElement(t) || new e(t);
      }),
      (e.refreshAll = function () {
        for (var t in o) o[t].refresh();
      }),
      (e.findByElement = function (t) {
        return o[t.waypointContextKey];
      }),
      (window.onload = function () {
        r && r(), e.refreshAll();
      }),
      (n.requestAnimationFrame = function (e) {
        var i =
          window.requestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          t;
        i.call(window, e);
      }),
      (n.Context = e);
  })(),
  (function () {
    "use strict";
    function t(t, e) {
      return t.triggerPoint - e.triggerPoint;
    }
    function e(t, e) {
      return e.triggerPoint - t.triggerPoint;
    }
    function i(t) {
      (this.name = t.name),
        (this.axis = t.axis),
        (this.id = this.name + "-" + this.axis),
        (this.waypoints = []),
        this.clearTriggerQueues(),
        (o[this.axis][this.name] = this);
    }
    var o = { vertical: {}, horizontal: {} },
      n = window.Waypoint;
    (i.prototype.add = function (t) {
      this.waypoints.push(t);
    }),
      (i.prototype.clearTriggerQueues = function () {
        this.triggerQueues = { up: [], down: [], left: [], right: [] };
      }),
      (i.prototype.flushTriggers = function () {
        for (var i in this.triggerQueues) {
          var o = this.triggerQueues[i],
            n = "up" === i || "left" === i;
          o.sort(n ? e : t);
          for (var r = 0, s = o.length; s > r; r += 1) {
            var a = o[r];
            (a.options.continuous || r === o.length - 1) && a.trigger([i]);
          }
        }
        this.clearTriggerQueues();
      }),
      (i.prototype.next = function (e) {
        this.waypoints.sort(t);
        var i = n.Adapter.inArray(e, this.waypoints),
          o = i === this.waypoints.length - 1;
        return o ? null : this.waypoints[i + 1];
      }),
      (i.prototype.previous = function (e) {
        this.waypoints.sort(t);
        var i = n.Adapter.inArray(e, this.waypoints);
        return i ? this.waypoints[i - 1] : null;
      }),
      (i.prototype.queueTrigger = function (t, e) {
        this.triggerQueues[e].push(t);
      }),
      (i.prototype.remove = function (t) {
        var e = n.Adapter.inArray(t, this.waypoints);
        e > -1 && this.waypoints.splice(e, 1);
      }),
      (i.prototype.first = function () {
        return this.waypoints[0];
      }),
      (i.prototype.last = function () {
        return this.waypoints[this.waypoints.length - 1];
      }),
      (i.findOrCreate = function (t) {
        return o[t.axis][t.name] || new i(t);
      }),
      (n.Group = i);
  })(),
  (function () {
    "use strict";
    function t(t) {
      this.$element = e(t);
    }
    var e = window.jQuery,
      i = window.Waypoint;
    e.each(
      [
        "innerHeight",
        "innerWidth",
        "off",
        "offset",
        "on",
        "outerHeight",
        "outerWidth",
        "scrollLeft",
        "scrollTop",
      ],
      function (e, i) {
        t.prototype[i] = function () {
          var t = Array.prototype.slice.call(arguments);
          return this.$element[i].apply(this.$element, t);
        };
      }
    ),
      e.each(["extend", "inArray", "isEmptyObject"], function (i, o) {
        t[o] = e[o];
      }),
      i.adapters.push({ name: "jquery", Adapter: t }),
      (i.Adapter = t);
  })(),
  (function () {
    "use strict";
    function t(t) {
      return function () {
        var i = [],
          o = arguments[0];
        return (
          t.isFunction(arguments[0]) &&
            ((o = t.extend({}, arguments[1])), (o.handler = arguments[0])),
          this.each(function () {
            var n = t.extend({}, o, { element: this });
            "string" == typeof n.context &&
              (n.context = t(this).closest(n.context)[0]),
              i.push(new e(n));
          }),
          i
        );
      };
    }
    var e = window.Waypoint;
    window.jQuery && (window.jQuery.fn.waypoint = t(window.jQuery)),
      window.Zepto && (window.Zepto.fn.waypoint = t(window.Zepto));
  })();

/*** sticky.min.js ***/
!(function () {
  "use strict";
  function t(s) {
    (this.options = e.extend({}, i.defaults, t.defaults, s)),
      (this.element = this.options.element),
      (this.$element = e(this.element)),
      this.createWrapper(),
      this.createWaypoint();
  }
  var e = window.jQuery,
    i = window.Waypoint;
  (t.prototype.createWaypoint = function () {
    var t = this.options.handler;
    this.waypoint = new i(
      e.extend({}, this.options, {
        element: this.wrapper,
        handler: e.proxy(function (e) {
          var i = this.options.direction.indexOf(e) > -1,
            s = i ? this.$element.outerHeight(!0) : "";
          this.$wrapper.height(s),
            this.$element.toggleClass(this.options.stuckClass, i),
            t && t.call(this, e);
        }, this),
      })
    );
  }),
    (t.prototype.createWrapper = function () {
      this.$element.wrap(this.options.wrapper),
        (this.$wrapper = this.$element.parent()),
        (this.wrapper = this.$wrapper[0]);
    }),
    (t.prototype.destroy = function () {
      this.$element.parent()[0] === this.wrapper &&
        (this.waypoint.destroy(),
        this.$element.removeClass(this.options.stuckClass).unwrap());
    }),
    (t.defaults = {
      wrapper: '<div class="sticky-wrapper" />',
      stuckClass: "stuck",
      direction: "down right",
    }),
    (i.Sticky = t);
})();
/*** elipsis_feature_text.js ***/
!(function (s) {
  s.fn.shorten = function (e) {
    var t = { showChars: 100, ellipsesText: "â€¦" };
    return (
      e && s.extend(t, e),
      s(document).on(
        {
          click: function () {
            var e = s(this);
            return (
              e.hasClass("less")
                ? (e.removeClass("less"), e.html(t.moreText))
                : (e.addClass("less"), e.html(t.lessText)),
              e.parent().prev().toggle(),
              e.prev().toggle(),
              !1
            );
          },
        },
        ".morelink"
      ),
      this.each(function () {
        var e = s(this);
        if (!e.hasClass("shortened")) {
          e.addClass("shortened");
          var r = e.html();
          if (r.length > t.showChars) {
            var l = r.substr(0, t.showChars),
              h =
                (r.substr(t.showChars, r.length - t.showChars),
                l +
                  '<span class="moreellipses">' +
                  t.ellipsesText +
                  " </span>");
            e.html(h);
          }
        }
      })
    );
  };
})(jQuery);

/*** elipsis_feature_text_b.js ***/
!(function (s) {
  s.fn.shortenb = function (e) {
    var t = { showChars: 200, ellipsesText: "â€¦" };
    return (
      e && s.extend(t, e),
      s(document).on(
        {
          click: function () {
            var e = s(this);
            return (
              e.hasClass("less")
                ? (e.removeClass("less"), e.html(t.moreText))
                : (e.addClass("less"), e.html(t.lessText)),
              e.parent().prev().toggle(),
              e.prev().toggle(),
              !1
            );
          },
        },
        ".morelink"
      ),
      this.each(function () {
        var e = s(this);
        if (!e.hasClass("shortened")) {
          e.addClass("shortened");
          var r = e.html();
          if (r.length > t.showChars) {
            var l = r.substr(0, t.showChars),
              h =
                (r.substr(t.showChars, r.length - t.showChars),
                l +
                  '<span class="moreellipses">' +
                  t.ellipsesText +
                  " </span>");
            e.html(h);
          }
        }
      })
    );
  };
})(jQuery);

/*** collapse.js ***/
!(function (t) {
  "use strict";
  var e = function (a, s) {
    (this.$element = t(a)),
      (this.options = t.extend({}, e.DEFAULTS, s)),
      (this.$trigger = t(
        '[data-toggle="collapse"][href="#' +
          a.id +
          '"],[data-toggle="collapse"][data-target="#' +
          a.id +
          '"]'
      )),
      (this.transitioning = null),
      this.options.parent
        ? (this.$parent = this.getParent())
        : this.addAriaAndCollapsedClass(this.$element, this.$trigger),
      this.options.toggle && this.toggle();
  };
  function a(e) {
    var a,
      s =
        e.attr("data-target") ||
        ((a = e.attr("href")) && a.replace(/.*(?=#[^\s]+$)/, ""));
    return t(s);
  }
  function s(a) {
    return this.each(function () {
      var s = t(this),
        i = s.data("bs.collapse"),
        n = t.extend({}, e.DEFAULTS, s.data(), "object" == typeof a && a);
      !i && n.toggle && /show|hide/.test(a) && (n.toggle = !1),
        i || s.data("bs.collapse", (i = new e(this, n))),
        "string" == typeof a && i[a]();
    });
  }
  (e.VERSION = "3.3.6"),
    (e.TRANSITION_DURATION = 350),
    (e.DEFAULTS = { toggle: !0 }),
    (e.prototype.dimension = function () {
      return this.$element.hasClass("width") ? "width" : "height";
    }),
    (e.prototype.show = function () {
      if (!this.transitioning && !this.$element.hasClass("in")) {
        var a,
          i =
            this.$parent &&
            this.$parent.children(".panel").children(".in, .collapsing");
        if (
          !(i && i.length && (a = i.data("bs.collapse")) && a.transitioning)
        ) {
          var n = t.Event("show.bs.collapse");
          if ((this.$element.trigger(n), !n.isDefaultPrevented())) {
            i &&
              i.length &&
              (s.call(i, "hide"), a || i.data("bs.collapse", null));
            var l = this.dimension();
            this.$element
              .removeClass("collapse")
              .addClass("collapsing")
              [l](0)
              .attr("aria-expanded", !0),
              this.$trigger.removeClass("collapsed").attr("aria-expanded", !0),
              (this.transitioning = 1);
            var o = function () {
              this.$element
                .removeClass("collapsing")
                .addClass("collapse in")
                [l](""),
                (this.transitioning = 0),
                this.$element.trigger("shown.bs.collapse");
            };
            if (!t.support.transition) return o.call(this);
            var r = t.camelCase(["scroll", l].join("-"));
            this.$element
              .one("bsTransitionEnd", t.proxy(o, this))
              .emulateTransitionEnd(e.TRANSITION_DURATION)
              [l](this.$element[0][r]);
          }
        }
      }
    }),
    (e.prototype.hide = function () {
      if (!this.transitioning && this.$element.hasClass("in")) {
        var a = t.Event("hide.bs.collapse");
        if ((this.$element.trigger(a), !a.isDefaultPrevented())) {
          var s = this.dimension();
          this.$element[s](this.$element[s]())[0].offsetHeight,
            this.$element
              .addClass("collapsing")
              .removeClass("collapse in")
              .attr("aria-expanded", !1),
            this.$trigger.addClass("collapsed").attr("aria-expanded", !1),
            (this.transitioning = 1);
          var i = function () {
            (this.transitioning = 0),
              this.$element
                .removeClass("collapsing")
                .addClass("collapse")
                .trigger("hidden.bs.collapse");
          };
          if (!t.support.transition) return i.call(this);
          this.$element[s](0)
            .one("bsTransitionEnd", t.proxy(i, this))
            .emulateTransitionEnd(e.TRANSITION_DURATION);
        }
      }
    }),
    (e.prototype.toggle = function () {
      this[this.$element.hasClass("in") ? "hide" : "show"]();
    }),
    (e.prototype.getParent = function () {
      return t(this.options.parent)
        .find(
          '[data-toggle="collapse"][data-parent="' + this.options.parent + '"]'
        )
        .each(
          t.proxy(function (e, s) {
            var i = t(s);
            this.addAriaAndCollapsedClass(a(i), i);
          }, this)
        )
        .end();
    }),
    (e.prototype.addAriaAndCollapsedClass = function (t, e) {
      var a = t.hasClass("in");
      t.attr("aria-expanded", a),
        e.toggleClass("collapsed", !a).attr("aria-expanded", a);
    });
  var i = t.fn.collapse;
  (t.fn.collapse = s),
    (t.fn.collapse.Constructor = e),
    (t.fn.collapse.noConflict = function () {
      return (t.fn.collapse = i), this;
    }),
    t(document).on(
      "click.bs.collapse.data-api",
      '[data-toggle="collapse"]',
      function (e) {
        var i = t(this);
        i.attr("data-target") || e.preventDefault();
        var n = a(i),
          l = n.data("bs.collapse") ? "toggle" : i.data();
        s.call(n, l);
      }
    );
})(jQuery);

/*** transition.js ***/
!(function (n) {
  "use strict";
  (n.fn.emulateTransitionEnd = function (t) {
    var i = !1,
      r = this;
    n(this).one("bsTransitionEnd", function () {
      i = !0;
    });
    return (
      setTimeout(function () {
        i || n(r).trigger(n.support.transition.end);
      }, t),
      this
    );
  }),
    n(function () {
      (n.support.transition = (function () {
        var n = document.createElement("bootstrap"),
          t = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend",
          };
        for (var i in t) if (void 0 !== n.style[i]) return { end: t[i] };
        return !1;
      })()),
        n.support.transition &&
          (n.event.special.bsTransitionEnd = {
            bindType: n.support.transition.end,
            delegateType: n.support.transition.end,
            handle: function (t) {
              if (n(t.target).is(this))
                return t.handleObj.handler.apply(this, arguments);
            },
          });
    });
})(jQuery);

$(".click").click(function () {
  $(".fa-chevron-right").toggleClass("fa-chevron-down");
  $(".cajaoculta").toggleClass("showcontent");
});
$(".click").append(' <i class="fa fa-chevron-right"></i>');
